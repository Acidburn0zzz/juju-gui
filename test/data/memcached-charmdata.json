{
  "maintainer": "Clint Byrum <clint@ubuntu.com>",
  "owner": "charmers",
  "provides": {
    "munin": {
      "interface": "munin-node"
    },
    "cache": {
      "interface": "memcache"
    },
    "nrpe-external-master": {
      "interface": "nrpe-external-master",
      "scope": "container"
    }
  },
  "series": "precise",
  "config": {
    "options": {
      "request-limit": {
        "default": -1,
        "type": "int",
        "description": "limit of requests a single client can make at one time\n(memcached option -R) -1 takes memcached default (20)\n"
      },
      "slab-page-size": {
        "default": -1,
        "type": "int",
        "description": "Override the size of each slab page in bytes. In mundane\nwords, it adjusts  the  maximum  item  size that  memcached\nwill  accept.  You can use the suffixes K and M to specify\nthe size as well, so use 2000000 or 2000K or 2M if you want\na maximum size of 2 MB per object.   It  is  not  recommended\nto raise this limit above 1 MB due just to performance reasons.\nThe default value is 1 MB. (memcached option -I) -1 takes\nthe memcached default.\n"
      },
      "min-item-size": {
        "default": -1,
        "type": "int",
        "description": "Allocate a minimum of <size> bytes for the item key, value,\nand flags. The default  is  48.  If  you have  a  lot of small\nkeys and values, you can get a significant memory efficiency\ngain with a lower value. If you use a high chunk growth factor\n(-f option),  on  the  other  hand,  you  may  want  to\nincrease  the  size  to  allow  a  bigger percentage of your\nitems to fit in the most densely packed (smallest) chunks.\n(memcached option -n)\n"
      },
      "disable-large-pages": {
        "default": "no",
        "type": "string",
        "description": "The charm will will try to use large pages if given more than 2GB of RAM. You may want to disable this behavior. (memcached option -L)"
      },
      "tcp-port": {
        "default": 11211,
        "type": "int",
        "description": "TCP port to listen on. (memcached option -p)"
      },
      "connection-limit": {
        "default": 1024,
        "type": "int",
        "description": "maximum simultaneous connections (memcached option -c)"
      },
      "udp-port": {
        "default": 0,
        "type": "int",
        "description": "UDP port to listen on (memcached option -U)"
      },
      "nagios_context": {
        "default": "juju",
        "type": "string",
        "description": "Used by the nrpe-external-master subordinate charm. A string that will be prepended to instance name to set the host name in nagios. So for instance the hostname would be something like:\n    juju-memcached-0\nIf you're running multiple environments with the same services in them this allows you to differentiate between them.\n"
      },
      "threads": {
        "default": -1,
        "type": "int",
        "description": "number of threads to use. default is 4. (memcached option -t)"
      },
      "disable-auto-cleanup": {
        "default": "no",
        "type": "string",
        "description": "do not remove things automatically from the cache on OOM\n(memcached option -M)\n"
      },
      "factor": {
        "default": -1.0,
        "type": "float",
        "description": "Use <factor> as the multiplier for computing the sizes of memory\nchunks that items are stored in.  A lower value  may result\nin less wasted memory depending on the total amount of memory\navailable and the distribution of item size.\n"
      },
      "disable-cas": {
        "default": "no",
        "type": "string",
        "description": "disable use of CAS (and reduce the per-item size by 8 bytes)"
      },
      "extra-options": {
        "default": "",
        "type": "string",
        "description": "memcached has many other options documented in its man page. You may pass them here as a string which will be appended to memcached's execution."
      },
      "size": {
        "default": 768,
        "type": "int",
        "description": "Size of memcache pool in MiB (memcached option -m)"
      }
    }
  },
  "description": "Danga Interactive developed memcached to enhance the speed of LiveJournal.com, a site which was already doing 20 million+ dynamic page views per day for 1 million users with a bunch of webservers and a bunch of database servers. memcached dropped the database load to almost nothing, yielding faster page load times for users, better resource utilization, and faster access to the databases on a memcache miss.\nmemcached optimizes specific high-load serving applications that are designed to take advantage of its versatile no-locking memory access system. Clients are available in several different programming languages, to suit the needs of the specific application. Traditionally this has been used in mod_perl apps to avoid storing large chunks of data in Apache memory, and to share this burden across several machines.",
  "store_url": "cs:precise/memcached-6",
  "store_revision": 6,
  "categories": [
    "applications"
  ],
  "name": "memcached",
  "last_change": {
    "committer": "Marco Ceppi <marco@ceppi.net>",
    "message": "Added icon.svg\n",
    "revno": 54,
    "created": 1367021613.336
  },
  "summary": "A high-performance memory object caching system",
  "bzr_branch": "lp:~charmers/charms/precise/memcached/trunk",
  "proof": {
    "w": [
      " no README file"
    ]
  }
}
